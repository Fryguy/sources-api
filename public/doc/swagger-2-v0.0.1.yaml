swagger: '2.0'
info:
  description: Topological Inventory
  version: 0.0.1
  title: Topological Inventory
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
securityDefinitions:
  UserSecurity:
    type: basic
security:
- UserSecurity: []
paths:
  "/authentications":
    get:
      summary: List Authentications
      operationId: listAuthentications
      description: Returns an array of Authentication objects
      produces:
      - application/json
      responses:
        200:
          description: Authentications array
          schema:
            type: array
            items:
              "$ref": "#/definitions/Authentication"
    post:
      summary: Create a new Authentication
      operationId: createAuthentication
      description: Creates a Authentication object
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        description: Authentication attributes to create
        required: true
        schema:
          "$ref": "#/definitions/Authentication"
      responses:
        201:
          description: Authentication creation successful
          schema:
            type: object
            items:
              "$ref": "#/definitions/Authentication"
  "/authentications/{id}":
    get:
      summary: Show an existing Authentication
      operationId: showAuthentication
      description: Returns a Authentication object
      produces:
      - application/json
      parameters:
      - "$ref": "#/parameters/ID"
      responses:
        200:
          description: Authentication info
          schema:
            "$ref": "#/definitions/Authentication"
        404:
          description: Not found
    patch:
      summary: Update an existing Authentication
      operationId: updateAuthentication
      description: Updates a Authentication object
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - "$ref": "#/parameters/ID"
      - name: body
        in: body
        description: Authentication attributes to update
        required: true
        schema:
          "$ref": "#/definitions/Authentication"
      responses:
        204:
          description: Updated, no content
        404:
          description: Not found
    delete:
      summary: Delete an existing Authentication
      operationId: deleteAuthentication
      description: Deletes a Authentication object
      produces:
      - application/json
      parameters:
      - "$ref": "#/parameters/ID"
      responses:
        204:
          description: Authentication deleted
        404:
          description: Not found
  "/endpoints":
    get:
      summary: List Endpoints
      operationId: listEndpoints
      description: Returns an array of Endpoint objects
      produces:
      - application/json
      responses:
        200:
          description: Endpoints array
          schema:
            type: array
            items:
              "$ref": "#/definitions/Endpoint"
    post:
      summary: Create a new Endpoint
      operationId: createEndpoint
      description: Creates a Endpoint object
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        description: Endpoint attributes to create
        required: true
        schema:
          "$ref": "#/definitions/Endpoint"
      responses:
        201:
          description: Endpoint creation successful
          schema:
            type: object
            items:
              "$ref": "#/definitions/Endpoint"
  "/endpoints/{id}":
    get:
      summary: Show an existing Endpoint
      operationId: showEndpoint
      description: Returns a Endpoint object
      produces:
      - application/json
      parameters:
      - "$ref": "#/parameters/ID"
      responses:
        200:
          description: Endpoint info
          schema:
            "$ref": "#/definitions/Endpoint"
        404:
          description: Not found
    patch:
      summary: Update an existing Endpoint
      operationId: updateEndpoint
      description: Updates a Endpoint object
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - "$ref": "#/parameters/ID"
      - name: body
        in: body
        description: Endpoint attributes to update
        required: true
        schema:
          "$ref": "#/definitions/Endpoint"
      responses:
        204:
          description: Updated, no content
        404:
          description: Not found
    delete:
      summary: Delete an existing Endpoint
      operationId: deleteEndpoint
      description: Deletes a Endpoint object
      produces:
      - application/json
      parameters:
      - "$ref": "#/parameters/ID"
      responses:
        204:
          description: Endpoint deleted
        404:
          description: Not found
  "/source_types":
    get:
      summary: List SourceTypes
      operationId: listSourceTypes
      description: Returns an array of SourceType objects
      produces:
      - application/json
      responses:
        200:
          description: SourceTypes array
          schema:
            type: array
            items:
              "$ref": "#/definitions/SourceType"
    post:
      summary: Create a new SourceType
      operationId: createSourceType
      description: Creates a SourceType object
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        description: SourceType attributes to create
        required: true
        schema:
          "$ref": "#/definitions/SourceType"
      responses:
        201:
          description: SourceType creation successful
          schema:
            type: object
            items:
              "$ref": "#/definitions/SourceType"
  "/source_types/{id}":
    get:
      summary: Show an existing SourceType
      operationId: showSourceType
      description: Returns a SourceType object
      produces:
      - application/json
      parameters:
      - "$ref": "#/parameters/ID"
      responses:
        200:
          description: SourceType info
          schema:
            "$ref": "#/definitions/SourceType"
        404:
          description: Not found
  "/source_types/{id}/sources":
    get:
      summary: List Sources for SourceType
      operationId: listSourceTypeSources
      description: Returns an array of Source objects
      produces:
      - application/json
      responses:
        200:
          description: Sources array
          schema:
            type: array
            items:
              "$ref": "#/definitions/Source"
      parameters:
      - "$ref": "#/parameters/ID"
  "/sources":
    get:
      summary: List Sources
      operationId: listSources
      description: Returns an array of Source objects
      produces:
      - application/json
      responses:
        200:
          description: Sources array
          schema:
            type: array
            items:
              "$ref": "#/definitions/Source"
    post:
      summary: Create a new Source
      operationId: createSource
      description: Creates a Source object
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        description: Source attributes to create
        required: true
        schema:
          "$ref": "#/definitions/Source"
      responses:
        201:
          description: Source creation successful
          schema:
            type: object
            items:
              "$ref": "#/definitions/Source"
  "/sources/{id}":
    get:
      summary: Show an existing Source
      operationId: showSource
      description: Returns a Source object
      produces:
      - application/json
      parameters:
      - "$ref": "#/parameters/ID"
      responses:
        200:
          description: Source info
          schema:
            "$ref": "#/definitions/Source"
        404:
          description: Not found
    patch:
      summary: Update an existing Source
      operationId: updateSource
      description: Updates a Source object
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - "$ref": "#/parameters/ID"
      - name: body
        in: body
        description: Source attributes to update
        required: true
        schema:
          "$ref": "#/definitions/Source"
      responses:
        204:
          description: Updated, no content
        404:
          description: Not found
    delete:
      summary: Delete an existing Source
      operationId: deleteSource
      description: Deletes a Source object
      produces:
      - application/json
      parameters:
      - "$ref": "#/parameters/ID"
      responses:
        204:
          description: Source deleted
        404:
          description: Not found
  "/sources/{id}/endpoints":
    get:
      summary: List Endpoints for Source
      operationId: listSourceEndpoints
      description: Returns an array of Endpoint objects
      produces:
      - application/json
      responses:
        200:
          description: Endpoints array
          schema:
            type: array
            items:
              "$ref": "#/definitions/Endpoint"
      parameters:
      - "$ref": "#/parameters/ID"
parameters:
  ID:
    name: id
    in: path
    description: ID of the resource
    required: true
    type: string
    pattern: "/^\\d+$/"
definitions:
  Authentication:
    type: object
    properties:
      id:
        type: string
        readOnly: true
        format: uuid
      tenant_id:
        type: string
        readOnly: true
        format: uuid
      authtype:
        type: string
        example: openshift_default
      name:
        type: string
        example: OpenShift default
      resource_type:
        type: string
        example: Endpoint
      resource_id:
        type: string
        format: uuid
      status:
        type: string
        example: valid
      status_details:
        type: string
      username:
        type: string
        example: user@example.com
      password:
        type: string
  Endpoint:
    type: object
    properties:
      id:
        type: string
        readOnly: true
        format: uuid
      default:
        type: boolean
      host:
        type: string
        example: www.example.com
        description: URI host component
      path:
        type: string
        example: "/api/v1"
        description: URI path component
      port:
        type: integer
        minimum: 0
        maximum: 65534
        example: 80
        description: URI port component
      role:
        type: string
        example: default
      scheme:
        type: string
        example: https
        description: URI scheme component
      source_id:
        type: string
        example: '1234567890'
        readOnly: true
        format: uuid
      tenant_id:
        type: string
        readOnly: true
        format: uuid
      verify_ssl:
        type: boolean
        example: true
        description: Should SSL be verified
      certificate_authority:
        type: string
        description: Optional X.509 Certificate Authority
  ID:
    type: string
    description: ID of the resource
    pattern: "/^\\d+$/"
  Source:
    type: object
    properties:
      id:
        type: string
        readOnly: true
        format: uuid
      source_type_id:
        type: string
        readOnly: true
        format: uuid
      name:
        type: string
        example: Sample Provider
        title: Name
      uid:
        type: string
        readOnly: true
        title: Unique ID of the inventory source installation
      tenant_id:
        type: string
        readOnly: true
        format: uuid
      version:
        type: string
        readOnly: true
        example: 6.5.0
        title: Version
  SourceType:
    type: object
    required:
    - name
    - product_name
    - vendor
    properties:
      id:
        type: string
        readOnly: true
        format: uuid
      name:
        type: string
        example: openshift
      product_name:
        type: string
        example: OpenShift
      vendor:
        type: string
        example: Red Hat
      schema:
        type: object
host: virtserver.swaggerhub.com
schemes:
- https
- http
basePath: "/r/insights/platform/sources/v0.0"
